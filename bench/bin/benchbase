#! /bin/bash

set -e

if [ $# -eq 0 ]; then
    echo "No arguments supplied."
    echo "This script needs the type of benchmark [ycsb|tpcc]."
    echo "For example: ./bench/bin/exec_benchbase ycsb"
  exit 1
fi

ESC=$(printf '\033[')
message () {
 printf "${ESC}1m%s${ESC}m\n" "$1"
}

cd "$(dirname "$0")"
base_path=$(pwd)/../..
cd $base_path/third_party/benchbase

benchmark=$1

### Install and Build
zip_file=target/benchbase-mysql.zip
if [ ! -f "$zip_file" ]; then
  message " It seems to be the first-time execution of this script. Clean & Build the mvn package..."

  ### Install JDK-17
  JAVA_HOME=$(/usr/libexec/java_home -v 17)
  if  [[ ${JAVA_HOME} != *"17"* ]]; then
    message '    JDK-17 is not found. Start installing...'
    if [ "$(uname)" == "Darwin" ]; then
      brew install openjdk@17
      export PATH=$(brew --prefix openjdk@17)/bin:$PATH
      sudo ln -sfn $(brew --prefix openjdk@17)/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
    else
      sudo apt install openjdk-17-jdk
    fi
    export JAVA_HOME=$(/usr/libexec/java_home -v 17)
  fi

  ### Build JAR
  ./mvnw clean package -P mysql -e
  unzip $zip_file
  cd -
fi

### Benchmark
message "Execute the benchmarking $benchmark"
ex_file=benchbase-mysql/benchbase.jar

# ./build.sh lineairdb_storage_engine
# sudo cp plugin_output_directory/ha_lineairdb_storage_engine.so $(echo "SHOW VARIABLES LIKE 'plugin_dir';" | sudo mysql -uroot -N | awk '{print $2}')
for storage_engine in lineairdb innodb; do

  sudo sed -i s/default_storage_engine.*/default_storage_engine=$storage_engine/ /etc/mysql/mysql.conf.d/mysqld.cnf

  for num_thread in {1..`nproc`}; do

    sudo sed -i "s/innodb_thread_concurrency.*/innodb_thread_concurrency=$num_thread/" /etc/mysql/mysql.conf.d/mysqld.cnf
    sed -i "s/<terminals>.*<\/terminals>/<terminals>$num_thread<\/terminals>/" $base_path/bench/config/ycsb.xml
    sudo systemctl restart mysql
    mysql -u bench < $base_path/bench/reset.sql

    java -jar $ex_file -b $benchmark -c $base_path/bench/config/$benchmark.xml --create=true --load=true --execute=true

    mkdir -p $base_path/bench/results/$storage_engine/thread_$num_thread
    mv results/*.csv $base_path/bench/results/$storage_engine/thread_$num_thread
  done
done

message 'Finish the benchmarking'
